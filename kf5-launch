#!/bin/bash

if [ "$SNAP_ARCH" == "amd64" ]; then
  ARCH='x86_64-linux-gnu'
elif [ "$SNAP_ARCH" == "armhf" ]; then
  ARCH="arm-linux-gnueabihf"
else
  ARCH="$SNAP_ARCH-linux-gnu"
fi

KF5=$SNAP/kf5

if [ ! -d $KF5/usr ] ; then
  echo "You need to connect this snap to the kde-frameworks-5 snap."
  echo ""
  echo "You can do this with those commands:"
  echo "snap install kde-frameworks-5"
  echo "snap connect $SNAP_NAME:kde-frameworks-5-plug kde-frameworks-5:kde-frameworks-5-slot"
  exit 1
fi

export PATH=$PATH:$KF5/usr/bin:$KF5/usr/sbin
# https://bugs.launchpad.net/snapcraft/+bug/1661023
# / in the snap is basically ubuntu-core.
export PATH=$PATH:/usr/local/sbin:/usr/local/bin

export LD_LIBRARY_PATH=$SNAP/usr/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$SNAP/usr/lib/$ARCH:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$KF5/usr/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$KF5/usr/lib/$ARCH:$LD_LIBRARY_PATH

# XKB config
export XKB_CONFIG_ROOT=$KF5/usr/share/X11/xkb

# Mesa Libs
export LD_LIBRARY_PATH=$KF5/usr/lib/$ARCH/mesa:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$KF5/usr/lib/$ARCH/mesa-egl:$LD_LIBRARY_PATH

# XDG Config
export XDG_CONFIG_DIRS=$KF5/etc/xdg:$SNAP/etc/xdg:$XDG_CONFIG_DIRS

# Note: this doesn't seem to work, QML's LocalStorage either ignores
# or fails to use $SNAP_USER_DATA if defined here
export XDG_DATA_DIRS=$KF5/usr/local/share:$KF5/usr/share:$SNAP/usr/local/share:$SNAP/usr/share:$XDG_DATA_DIRS

# Font Config
export FONTCONFIG_PATH=$KF5/etc/fonts/config.d
export FONTCONFIG_FILE=$KF5/etc/fonts/fonts.conf

# Tell libGL where to find the drivers
export LIBGL_DRIVERS_PATH=$KF5/usr/lib/$ARCH/dri

# Necessary for the SDK to find the translations directory
export APP_DIR=$SNAP

# Set XDG_DATA_HOME to local path, dependent on snap version
export XDG_DATA_HOME=$SNAP_USER_DATA/.local-$SNAP_VERSION/share
mkdir -p $XDG_DATA_HOME

export XDG_CONFIG_HOME=$SNAP_USER_DATA/.local-$SNAP_VERSION/config
mkdir -p $XDG_DATA_HOME

export XDG_CACHE_HOME=$SNAP_USER_DATA/.cache-$SNAP_VERSION
mkdir -p $XDG_CACHE_HOME

export XDG_RUNTIME_DIR=$SNAP_USER_DATA/.local-$SNAP_VERSION/var/run/$UID
mkdir -p $XDG_RUNTIME_DIR

# Not good, needed for fontconfig and themes
ln -sf $KF5/usr/share/{fontconfig,fonts,fonts-*,themes} $XDG_DATA_HOME

# Qt Platform to Mir
export QTCHOOSER_NO_GLOBAL_DIR=1
export QT_SELECT=snappy-qt5

# Qt Libs
export LD_LIBRARY_PATH=$KF5/usr/lib/$ARCH/qt5/libs:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$KF5/usr/lib/$ARCH/pulseaudio:$LD_LIBRARY_PATH

# Qt Modules
export QT_PLUGIN_PATH=$QT_PLUGIN_PATH:$SNAP/usr/lib/$ARCH/qt5/plugins
export QT_PLUGIN_PATH=$QT_PLUGIN_PATH:$KF5/usr/lib/$ARCH/qt5/plugins
export QML2_IMPORT_PATH=$QML2_IMPORT_PATH:$SNAP/usr/lib/$ARCH/qt5/qml
export QML2_IMPORT_PATH=$QML2_IMPORT_PATH:$KF5/usr/lib/$ARCH/qt5/qml
export QML2_IMPORT_PATH=$QML2_IMPORT_PATH:$SNAP/lib/$ARCH
export QML2_IMPORT_PATH=$QML2_IMPORT_PATH:$KF5/lib/$ARCH

# Qt Webengine
export QTWEBENGINEPROCESS_PATH=$KF5/usr/lib/$ARCH/qt5/libexec/QtWebEngineProcess

# Removes Qt warning: Could not find a location
# of the system Compose files
export QTCOMPOSE=$KF5/usr/share/X11/locale

export DESKTOP_SESSION=/usr/share/xsessions/plasma
export XDG_SESSION_DESKTOP=KDE
export XDG_CURRENT_DESKTOP=KDE
export QT_QPA_PLATFORMTHEME=kde
export QT_XKB_CONFIG_ROOT=/usr/share/X11/xkb

# KDE specific
## Do not start slaves through klauncher but fork them directly.
export KDE_FORK_SLAVES=1
## Neon PATCH! make KIO look for slaves in a dynamic location depending on $SNAP
## FIXME: should be made a : separated list so we can look in $SNAP and $KF5!
export KF5_LIBEXEC_DIR=$KF5/usr/lib/$ARCH/libexec/kf5

cd $SNAP
exec "$@"
